# -*- coding: utf-8 -*-
"""blip-app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jsHACn2AWr91yDft4T4dv2jciteTEQAC
"""

import streamlit as st
from transformers import BlipProcessor, BlipForQuestionAnswering
from PIL import Image
import torch
import cv2
import numpy as np

# Initialize the BLIP processor and model
processor = BlipProcessor.from_pretrained("Salesforce/blip-vqa-base")
model = BlipForQuestionAnswering.from_pretrained("Salesforce/blip-vqa-base")

# Function to process and return the answer for the image
def ask_question_about_image(image, question):
    inputs = processor(image, question, return_tensors="pt")
    with torch.no_grad():
        outputs = model.generate(**inputs)
        answer = processor.decode(outputs[0], skip_special_tokens=True)
    return answer

# Function to read the uploaded image
def load_image(image_file):
    return Image.open(image_file).convert("RGB")

# Function to convert camera image from Streamlit to PIL Image
def convert_camera_image(img_array):
    img_rgb = cv2.cvtColor(img_array, cv2.COLOR_BGR2RGB)
    return Image.fromarray(img_rgb)

# Streamlit app layout
st.title("Visual Question Answering App with Camera")
st.write("Upload an image or use your camera, and ask a question about it. The AI will respond!")

# Option to upload an image or use camera
option = st.selectbox("How would you like to provide an image?", ("Upload Image", "Use Camera"))

if option == "Upload Image":
    image_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])
    if image_file is not None:
        img = load_image(image_file)
        st.image(img, caption='Uploaded Image', use_column_width=True)

elif option == "Use Camera":
    camera_input = st.camera_input("Take a picture with your webcam")
    if camera_input is not None:
        # Convert camera input to an image
        file_bytes = np.asarray(bytearray(camera_input.read()), dtype=np.uint8)
        img_array = cv2.imdecode(file_bytes, 1)  # Decode image
        img = convert_camera_image(img_array)
        st.image(img, caption='Captured Image', use_column_width=True)

# Input for the question
question = st.text_input("Ask a question about the image:")

# If the image is provided and a question is asked, show the answer
if st.button("Get Answer"):
    if option == "Upload Image" and image_file is not None:
        with st.spinner('Analyzing uploaded image...'):
            answer = ask_question_about_image(img, question)
        st.write(f"**Question:** {question}")
        st.write(f"**Answer:** {answer}")

    elif option == "Use Camera" and camera_input is not None:
        with st.spinner('Analyzing captured image...'):
            answer = ask_question_about_image(img, question)
        st.write(f"**Question:** {question}")
        st.write(f"**Answer:** {answer}")

    else:
        st.write("Please provide an image and a question.")